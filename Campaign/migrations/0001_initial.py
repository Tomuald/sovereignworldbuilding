# Generated by Django 3.0.2 on 2020-08-31 20:19

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ItemList', '0001_initial'),
        ('Dungeon', '0001_initial'),
        ('World', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125)),
                ('min_level', models.IntegerField()),
                ('max_level', models.IntegerField()),
                ('overview', tinymce.models.HTMLField(blank=True, null=True)),
                ('in_universe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Universe')),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125)),
                ('chapter_num', models.IntegerField()),
                ('summary', tinymce.models.HTMLField(blank=True, null=True)),
                ('in_campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Campaign.Campaign')),
                ('involved_npcs', models.ManyToManyField(blank=True, related_name='involvednpcs', to='World.NPC')),
                ('regions', models.ManyToManyField(blank=True, to='World.Region')),
            ],
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125)),
                ('encounter_num', models.IntegerField(blank=True, null=True)),
                ('encounter_type', models.CharField(blank=True, choices=[('gbe', 'Grid-based Encounter'), ('totme', 'Theater-of-the-Mind Encounter'), ('lbe', 'Lore-based Encounter')], max_length=5, null=True)),
                ('dramatic_question', models.CharField(blank=True, max_length=255, null=True)),
                ('summary', tinymce.models.HTMLField(blank=True, null=True)),
                ('entry', models.TextField(blank=True, max_length=2500, null=True)),
                ('exit', models.TextField(blank=True, max_length=2500, null=True)),
                ('in_dungeon_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Dungeon.Room')),
                ('in_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Location')),
            ],
            options={
                'ordering': ['encounter_num'],
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('quest_type', models.CharField(choices=[('mq', 'Main Quest'), ('sq', 'Side Quest')], max_length=2)),
                ('quest_num', models.IntegerField()),
                ('summary', tinymce.models.HTMLField(blank=True, null=True)),
                ('in_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Area')),
                ('in_chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Campaign.Chapter')),
                ('in_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.City')),
                ('involved_npcs', models.ManyToManyField(blank=True, to='World.NPC')),
            ],
            options={
                'ordering': ['quest_num'],
            },
        ),
        migrations.CreateModel(
            name='EncounterLoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('in_encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Campaign.Encounter')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ItemList.Item')),
            ],
            options={
                'verbose_name_plural': 'Encounter Loot',
            },
        ),
        migrations.AddField(
            model_name='encounter',
            name='in_quest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Campaign.Quest'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='involved_npcs',
            field=models.ManyToManyField(blank=True, to='World.NPC'),
        ),
    ]
