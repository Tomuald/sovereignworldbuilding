# Generated by Django 3.0.2 on 2020-08-31 20:19

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Pantheon', '0001_initial'),
        ('ItemList', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('area_type', models.CharField(choices=[('Vi', 'Village'), ('Sw', 'Swamp'), ('Fo', 'Forest'), ('Co', 'Coast'), ('Pl', 'Plains'), ('Hi', 'Hills'), ('Mo', 'Mountains'), ('La', 'Lake'), ('Ri', 'River'), ('Ro', 'Road'), ('Se', 'Sea'), ('Is', 'Island')], max_length=3)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, max_length=1500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='CityQuarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'City Quarters',
            },
        ),
        migrations.CreateModel(
            name='Empire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('faiths', models.ManyToManyField(blank=True, to='Pantheon.God')),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('faction_role', models.CharField(max_length=255)),
                ('alignment', models.CharField(choices=[('LG', 'Lawful/Good'), ('NG', 'Neutral/Good'), ('CG', 'Chaotic/Good'), ('LN', 'Lawful/Neutral'), ('N', 'True Neutral'), ('CN', 'Chaotic/Neutral'), ('CE', 'Chaotic/Evil'), ('NE', 'Neutral/Evil'), ('LE', 'Lawful/Evil')], default='LG', max_length=2)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('faiths', models.ManyToManyField(blank=True, to='Pantheon.God')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('location_type', models.CharField(max_length=125)),
                ('dungeon_entrance', models.BooleanField(default=False)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('flavor_text', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Universe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('biome', models.CharField(choices=[('Dr', 'Dry'), ('Tr', 'Tropical'), ('Te', 'Temperate'), ('Co', 'Continental'), ('Po', 'Polar')], max_length=2)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('in_empire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Empire')),
                ('in_universe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Universe')),
            ],
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('alignment', models.CharField(choices=[('LG', 'Lawful/Good'), ('NG', 'Neutral/Good'), ('CG', 'Chaotic/Good'), ('LN', 'Lawful/Neutral'), ('N', 'True Neutral'), ('CN', 'Chaotic/Neutral'), ('LE', 'Lawful/Evil'), ('NE', 'Neutral/Evil'), ('CE', 'Chaotic/Evil')], max_length=2)),
                ('npc_type', models.CharField(choices=[('A', 'Ally'), ('F', 'Foe'), ('N', 'Neutral')], max_length=1)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('faiths', models.ManyToManyField(blank=True, to='Pantheon.God')),
                ('in_faction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Faction')),
                ('in_universe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='World.Universe')),
            ],
        ),
        migrations.CreateModel(
            name='LocationLoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('in_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Location')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ItemList.Item')),
            ],
            options={
                'verbose_name_plural': 'Location Loot',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='NPCs',
            field=models.ManyToManyField(blank=True, to='World.NPC'),
        ),
        migrations.AddField(
            model_name='location',
            name='exit_points',
            field=models.ManyToManyField(blank=True, to='World.Location'),
        ),
        migrations.AddField(
            model_name='location',
            name='in_area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Area'),
        ),
        migrations.AddField(
            model_name='location',
            name='in_cityquarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.CityQuarter'),
        ),
        migrations.AddField(
            model_name='faction',
            name='in_universe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='World.Universe'),
        ),
        migrations.AddField(
            model_name='faction',
            name='leaders',
            field=models.ManyToManyField(blank=True, to='World.NPC'),
        ),
        migrations.AddField(
            model_name='empire',
            name='in_universe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Universe'),
        ),
        migrations.AddField(
            model_name='cityquarter',
            name='factions',
            field=models.ManyToManyField(blank=True, to='World.Faction'),
        ),
        migrations.AddField(
            model_name='cityquarter',
            name='in_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='World.City'),
        ),
        migrations.CreateModel(
            name='CityDemographics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race', models.CharField(max_length=125)),
                ('percent', models.IntegerField()),
                ('in_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='World.City')),
            ],
            options={
                'verbose_name_plural': 'City Demographics',
                'ordering': ('-percent',),
            },
        ),
        migrations.AddField(
            model_name='city',
            name='in_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='World.Region'),
        ),
        migrations.AddField(
            model_name='area',
            name='factions',
            field=models.ManyToManyField(blank=True, to='World.Faction'),
        ),
        migrations.AddField(
            model_name='area',
            name='in_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='World.Region'),
        ),
    ]
